{"/":{"title":"Introduction","data":{"":"2024 App Project\n1년에 앱 1개씩 만들어보자!! 하는 계획을 세우면서 시작하게 된 프로젝트에요.\n주제는 아직 비공개입니다."}},"/version/version-plan":{"title":"Version Plan","data":{"version-계획#Version 계획":"v1\nAPP\nFlutter 학습\nFrontend/Backend\nBackend\nOAuth2.0 로그인 코드 구현\n동작만 되는 1차적인 버전 완성이 목표\nFrontend\n목업작업 + Backend 측 로그인 연동 작업\nNext.js + React\nv2\nAPP : 필요 기능들 학습\nFrontend/Bakcend\nBackend\n게시글 카테고라이징, 태깅 기능 개발\nDBMS 선정, 테이블/도큐먼트 설계\nFrontend\nCSS 목업 작업\nv3\nAPP\n기초적인  앱 베이스 구성\n배포 절차 마련\nFrontend/Bakcend\nBackend\nGateway, Discovery Server/Client 도입\nConfig Server/Client 도입\n클라우드 배포 준비작업\nFrontend\nCSS 목업 작업\nZustand, Redux 기반 상태관리 코드 + 태깅/카테고리 기능 앱 구성\nv4\nAWS 클라우드 인프라 구성\nk8s 앱 구성 작업\nv5\n미정\nAPP 마켓 배포 예정","v1#v1":"APP\nFrontend/Backend\nBackend\nOAuth2.0 로그인 코드 구현\n동작만 되는 1차적인 버전 완성이 목표\nFrontend\n목업작업 + Backend 측 로그인 연동 작업\nNext.js + React","app#APP":"Dart, Flutter이번 프로젝트를 떠올렸을 때 Dart, Flutter 가 무슨 바로 해보면 바로 슉슉 적용되는 초딩레벨의 프레임워크인줄 착각했다. 그런데 적어도 2주 정도는 목차를 잘 보고 필요한 것만 학습을 해보는 시간을 가져야 할 것 같다.v1 에서는 학습하기로 결정","frontendbackend#Frontend/Backend":"frontend, backend 은 v1 까지는 docker-compose 로 배포가 가능한 버전을 만드는게 목표다.Spring Security OAuth 2.0일단 로그인만 동작하도록 하는 간단한 코드를 작성해둘 예정.ReactCSS 목업작업 + 로그인 연동작업","v2#v2":"APP : 필요 기능들 학습\nFrontend/Bakcend\nBackend\n게시글 카테고라이징, 태깅 기능 개발\nDBMS 선정, 테이블/도큐먼트 설계\nFrontend\nCSS 목업 작업","app-1#APP":"일단 웹뷰(React)를 담을 껍데기인 앱 은 v2 에서도 스터디를 하기로. 어차피 웹/앱 모두 상용 도메인으로 열어둘 것이기에 웹만 먼저 열어두고 나중에 앱을 연결하면 되기에 APP 을 연동하는 것은 급하게 생각하지 않기로 했다.","frontendbackend-1#Frontend/Backend":"Spring Security WASOAuth 를 통해서 가져온 게시글 id 들을 카테고라이징하고 태그를 붙일수 있는 기능을 개발하는 과정이다. 시간을 넉넉하게 잡고 테이블 설계, DBMS 선정까지 차분하게 해야 한다. 지금 당장은 MySQL 을 생각 중이지만, MongoDB를 선택하게 될수도 있기에...ReactCSS 목업 작업","v3#v3":"APP\n기초적인  앱 베이스 구성\n배포 절차 마련\nFrontend/Bakcend\nBackend\nGateway, Discovery Server/Client 도입\nConfig Server/Client 도입\n클라우드 배포 준비작업\nFrontend\nCSS 목업 작업\nZustand, Redux 기반 상태관리 코드 + 태깅/카테고리 기능 앱 구성","app-2#APP":"어느 정도의 기초적인 Flutter, Dart 기능들을 익힌 상태기초적인 앱 베이스를 만들어둘 예정.배포 구성 등을 학습해나가야 하는 과정.","frontendbackend-2#Frontend/Backend":"Spring Cloud Gateway, Discovery Server/Client먼저 동작만 하는 Gateway, Discovery Server/Client 를 만들어둔 후 Gateway 에 Security WAS 프로젝트를 Gateway 에 안착시켜서 적용 예정이다.일단 v1 단계에서 이미 예제들을 만들어두고 있다.React\nCSS, 목업 등을 구성\n리덕스 또는 Zustand 를 통한 상태관리 코드 작성","v4#v4":"AWS 클라우드 인프라 구성","v5#v5":"","app-3#APP":"마켓 배포 해보기"}},"/version/skill":{"title":"Skill","data":{"backend#Backend":"Spring Boot 3.x\nSpring Security\nSpring Cloud Gateway\nKotlin\ngrpc\nWebflux, R2dbc, Coroutine\nMySQL, Redis\nGraphQL\nMustache\n메시지 큐로 grpc 를 선택하게 된 것은 비용 문제로 인해... 또르르...백엔드 언어로 Java 를 선택할지, Kotlin 을 선택할지 정말 고민을 많이 했는데, @RequiredArgsConstructor 를 너무 게으르게 막 쓰고 있는 저 자신을 보면서 개인 플젝은 Kotlin 으로 해야겠다 하고 생각했습니다.별다른 이유 없어요!! 그냥 kotlin 이 최애 언어이기도 해서ㅋㅋㅋ","frontend#Frontend":"React\nOAuth2 Client\n이것 저것 공식문서를 읽어보다보니 Front, Back 분리했을 때 로그인 요청하는 것은 OAuth2 Client 가 React 가 되는게 맞았었다는걸 이제야 알게되었네요. 스프링 시큐리티로는 Resource Server 를 구현할 듯 하네요.","app#App":"Dart, Flutter\n성격상 CSS 나 색상에 대한 감각이 없기에 메뉴 만들때 허접해보이는 CSS 가 나올수 있다고 판단해서 Material Template 으로 미리 제공되는 디자인 슈트를 사용할 수 있는 Dart, Flutter 를 선택했슴다. 서버 개발자 취향이 항상 이런건지 모르겠지만 저 역시도... 전체 네이티브로 구현하기 보다는 Flutter 로는 껍데기와 GNB 등 메뉴만 만들고 나머지 모든 처리를 웹뷰로 할 생각입니다.\n인증처리시 인증정보를 Flutter 와 웹뷰 사이에 공유해야 하는 방법이 귀찮을 듯 한데 어떻게 잘 찾아보고 만들어보려고 생각중입니다~","인프라-고도화#인프라 고도화":"인프라 고도화 시에는 Gateway Server 를 Spring Cloud Kubernetes 기반으로 마이그레이션 해서 k8s 클러스터에 안착시킬 예정입니다. EKS 비용이 후덜덜 하긴 하지만, 1달 정도는 한번 EKS 클러스터에 운영해보고 싶다는 생각이 있습니다."}}}